{"version":3,"file":"static/js/513.a8667a80.chunk.js","mappings":"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","sources":["components/cards/JourneyCard.jsx","components/canvas/Earth.jsx","components/sections/Journey.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Document = styled.img`\n    display: none;\n    height: 70px;\n    width: fit-content;\n    background-color: #000;\n    border-radius: 10px;\n    &:hover{\n        cursor: pointer;\n        opacity: 0.8;\n    }\n`\n\nconst Description = styled.div`\n    width: 100%;\n    font-size: 15px;\n    font-weight: 400;\n    color: ${({ theme }) => theme.text_primary + 99};\n    margin-bottom: 10px;\n    @media only screen and (max-width: 768px){\n        font-size: 12px;\n    }\n`\n\nconst Span = styled.span`\noverflow: hidden;\ndisplay: -webkit-box;\nmax-width: 100%;\n-webkit-line-clamp: 4;\n-webkit-box-orient: vertical;\ntext-overflow: ellipsis;\n`\n\nconst Card = styled.div`\n    width: 650px;\n    border-radius: 10px;\n    box-shadow: 0px 0px 10px rgba(0,0,0,0.1);\n    padding: 12px 16px;\n    justify-content: space-between;\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    transition: all 0.3s ease-in-out;\n    &:hover{\n        box-shadow: 0px 0px 20px rgba(0,0,0,0.2);\n        transform: translateY(-5px);\n    }\n    @media only screen and (max-width: 768px){\n        padding: 10px;\n        gap: 8px;\n        width: 80vw;\n    }\n    @media only screen and (max-width: 400px){\n      width: 82vw;\n    }\n\n    &:hover ${Document}{\n        display: flex;\n    }\n\n    &:hover ${Span}{\n        overflow: visible;\n        -webkit-line-clamp: unset;\n    }\n\n    border: 0.1px solid #306EE8;\n    box-shadow: rgba(23, 92, 230, 0.15) 0px 4px 24px;\n`\n\nconst Top = styled.div`\n    width: 100%;\n    display: flex;\n    gap: 12px\n`\n\nconst Image = styled.img`\n    height: 50px;\n    background-color: #000;\n    border-radius: 10px;\n    margin-top: 4px;\n    @media only screen and (max-width: 768px){\n        height: 40px;\n    }\n`\n\nconst Body = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column; \n`\n\n\nconst Heading = styled.div`\n    font-size: 18px;\n    font-weight: 600;\n    color: ${({ theme }) => theme.text_primary + 99};\n    @media only screen and (max-width: 768px){\n        font-size: 14px;\n    }\n`\n\nconst SubHeading = styled.div`\n    font-size: 14px;\n    font-weight: 500;\n    color: ${({ theme }) => theme.text_secondary + 99};\n    @media only screen and (max-width: 768px){\n        font-size: 12px;\n    }\n`\n\nconst Date = styled.div`\n    font-size: 12px;\n    font-weight: 400;\n    color: ${({ theme }) => theme.text_secondary + 80};\n    @media only screen and (max-width: 768px){\n        font-size: 10px;\n    }\n`\n\n\nconst Skills = styled.div`\n    width: 100%;\n    display: flex;\n    gap: 12px;\n    margin-top: -10px;\n`\n\nconst ItemWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n`\n\nconst Skill = styled.div`\n    font-size: 15px;\n    font-weight: 400;\n    color: ${({ theme }) => theme.text_primary + 99};\n    @media only screen and (max-width: 768px){\n        font-size: 12px;\n    }\n`\n\nconst JourneyCard = ({ journey }) => {\n  return (\n    <Card>\n      <Top>\n        <Image src={journey.img} loading=\"lazy\" alt={journey.heading} />\n        <Body>\n          <Heading>{journey.heading}</Heading>\n          <SubHeading>{journey.sub_heading}</SubHeading>\n          <Date>{journey.date}</Date>\n        </Body>\n      </Top>\n\n      <Description>\n        {journey?.desc &&\n          <Span>{journey?.desc}</Span>\n        }\n        {journey?.skills && (\n          <>\n            <br />\n            <Skills>\n              <b>Skills:</b>\n              <ItemWrapper>\n                {journey?.skills?.map((skill, index) => (\n                  <Skill>â€¢ {skill}</Skill>\n                ))}\n              </ItemWrapper>\n            </Skills>\n          </>\n        )}\n      </Description>\n      {/* {journey.doc &&\n        <a href={journey.doc} target=\"new\">\n          <Document src={journey.doc} />\n        </a>\n      } */}\n    </Card>\n  );\n};\n\nexport default JourneyCard;\n","import React, { Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, Preload, useGLTF } from \"@react-three/drei\";\n\nconst Earth = () => {\n  const earth = useGLTF(\"./planet/scene.gltf\");\n  return (\n    <primitive object={earth.scene} scale={3} position-y={0} rotation-y={0} />\n  );\n};\n\nconst EarthCanvas = () => {\n  return (\n    <Canvas\n      shadows\n      frameloop=\"demand\"\n      dpr={[1, 2]}\n      gl={{ preserveDrawingBuffer: true }}\n      camera={{\n        fov: 45,\n        near: 0.1,\n        far: 200,\n        position: [-4, 3, 6],\n      }}\n    >\n      <Suspense fallback={null}>\n        <OrbitControls\n          autoRotate\n          enableZoom={false}\n          maxPolarAngle={Math.PI / 2}\n          minPolarAngle={Math.PI / 2}\n        />\n        <Earth />\n        <Preload all />\n      </Suspense>\n    </Canvas>\n  );\n};\n\nexport default EarthCanvas;\n","import React, {Suspense} from \"react\";\nimport styled from \"styled-components\";\nimport Timeline from '@mui/lab/Timeline';\nimport TimelineItem from '@mui/lab/TimelineItem';\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\nimport TimelineConnector from '@mui/lab/TimelineConnector';\nimport TimelineContent from '@mui/lab/TimelineContent';\nimport TimelineDot from '@mui/lab/TimelineDot';\nimport { journey } from \"../../data/constants\";\nimport JourneyCard from \"../cards/JourneyCard\";\nimport EarthCanvas from \"../canvas/Earth\";\n\n\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    position: relative;\n    z-index: 1;\n    align-items: center;\n    padding: 40px 0px 0px 0px;\n    @media (max-width: 960px) {\n        padding: 0px;\n    }\n`;\n\nconst Wrapper = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n    width: 100%;\n    max-width: 1350px;\n    padding: 50px 0;\n    gap: 12px;\n    @media (max-width: 960px) {\n        flex-direction: column;\n    }\n`;\n\nconst Title = styled.div`\nfont-size: 42px;\ntext-align: center;\nfont-weight: 600;\nmargin-top: 20px;\n  color: ${({ theme }) => theme.text_primary};\n  @media (max-width: 768px) {\n      margin-top: 12px;\n      font-size: 32px;\n  }\n`;\n\nconst Desc = styled.div`\n    font-size: 18px;\n    text-align: center;\n    max-width: 600px;\n    color: ${({ theme }) => theme.text_secondary};\n    @media (max-width: 768px) {\n        margin-top: 12px;\n        font-size: 16px;\n    }\n`;\n\nconst TimelineSection = styled.div`\n    width: 100%;\n    max-width: 1000px;\n    margin-top: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 12px;\n`;\n\n\nconst Journey = () => {\n  return (\n    <Container id=\"Journey\">\n      <Wrapper>\n        <Title>Journey</Title>\n        <Desc>\n          My education has been a journey of self-discovery and growth. My\n          educational details are as follows.\n        </Desc>\n        <TimelineSection>\n          <Timeline>\n          {journey.map((journey,index) => (\n            <TimelineItem>\n              <TimelineSeparator>\n                  <TimelineDot variant=\"outlined\" color=\"secondary\" />\n                  {index !== journey.length - 1 && <TimelineConnector style={{ background: '#854CE6' }} />}\n              </TimelineSeparator>\n              <TimelineContent sx={{ py: '12px', px: 2 }}>\n                <JourneyCard journey={journey}/>\n              </TimelineContent>\n            </TimelineItem>\n          ))}\n          </Timeline>\n        </TimelineSection>\n        <Suspense fallback={<div>Loading 3D...</div>}>\n          <EarthCanvas />\n        </Suspense>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default React.memo(Journey);\n"],"names":["Document","styled","img","_templateObject","_taggedTemplateLiteral","Description","div","_templateObject2","_ref","theme","text_primary","Span","span","_templateObject3","Card","_templateObject4","Top","_templateObject5","Image","_templateObject6","Body","_templateObject7","Heading","_templateObject8","_ref2","SubHeading","_templateObject9","_ref3","text_secondary","Date","_templateObject0","_ref4","Skills","_templateObject1","ItemWrapper","_templateObject10","Skill","_templateObject11","_ref5","_ref6","_journey$skills","journey","_jsxs","children","_jsx","src","loading","alt","heading","sub_heading","date","desc","skills","_Fragment","map","skill","index","Earth","earth","useGLTF","object","scene","scale","EarthCanvas","Canvas","shadows","frameloop","dpr","gl","preserveDrawingBuffer","camera","fov","near","far","position","Suspense","fallback","OrbitControls","autoRotate","enableZoom","maxPolarAngle","Math","PI","minPolarAngle","Preload","all","Container","Wrapper","Title","Desc","TimelineSection","Journey","id","Timeline","TimelineItem","TimelineSeparator","TimelineDot","variant","color","length","TimelineConnector","style","background","TimelineContent","sx","py","px","JourneyCard","React"],"sourceRoot":""}