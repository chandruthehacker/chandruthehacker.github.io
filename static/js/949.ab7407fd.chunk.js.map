{"version":3,"file":"static/js/949.ab7407fd.chunk.js","mappings":"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","sources":["components/canvas/Earth.jsx","components/sections/Contact.jsx"],"sourcesContent":["import React, { Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, Preload, useGLTF } from \"@react-three/drei\";\n\nconst Earth = () => {\n  const earth = useGLTF(\"./planet/scene.gltf\");\n  return (\n    <primitive object={earth.scene} scale={3} position-y={0} rotation-y={0} />\n  );\n};\n\nconst EarthCanvas = () => {\n  return (\n    <Canvas\n      shadows\n      frameloop=\"demand\"\n      dpr={[1, 2]}\n      gl={{ preserveDrawingBuffer: true }}\n      camera={{\n        fov: 45,\n        near: 0.1,\n        far: 200,\n        position: [-4, 3, 6],\n      }}\n    >\n      <Suspense fallback={null}>\n        <OrbitControls\n          autoRotate\n          enableZoom={false}\n          maxPolarAngle={Math.PI / 2}\n          minPolarAngle={Math.PI / 2}\n        />\n        <Earth />\n        <Preload all />\n      </Suspense>\n    </Canvas>\n  );\n};\n\nexport default EarthCanvas;\n","import React, { useRef, useState, Suspense } from \"react\";\nimport styled from \"styled-components\";\nimport emailjs from \"@emailjs/browser\";\nimport EarthCanvas from \"../canvas/Earth\";\nimport { Bio } from \"../../data/constants\";\nimport FacebookIcon from \"@mui/icons-material/Facebook\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport LinkedInIcon from \"@mui/icons-material/LinkedIn\";\nimport InstagramIcon from \"@mui/icons-material/Instagram\";\nimport TelegramIcon from \"@mui/icons-material/Telegram\";\nimport GmailIcon from \"@mui/icons-material/Email\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 12px;\n  z-index: 1;\n  align-items: center;\n  @media (max-width: 960px) {\n    padding: 0px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  max-width: 1350px;\n  padding: 0px 0px 80px 0px;\n  gap: 12px;\n  @media (max-width: 960px) {\n    flex-direction: column;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 52px;\n  text-align: center;\n  font-weight: 600;\n  margin-top: 20px;\n  color: ${({ theme }) => theme.text_primary};\n  @media (max-width: 768px) {\n    margin-top: 12px;\n    font-size: 32px;\n  }\n`;\n\nconst Desc = styled.div`\n  font-size: 18px;\n  text-align: center;\n  max-width: 600px;\n  padding: 0 15px;\n  color: ${({ theme }) => theme.text_secondary};\n  @media (max-width: 768px) {\n    margin-top: 12px;\n    font-size: 16px;\n  }\n`;\nconst ContactForm = styled.form`\n  width: 95%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: rgba(17, 25, 40, 0.83);\n  border: 1px solid rgba(255, 255, 255, 0.125);\n  padding: 32px;\n  border-radius: 12px;\n  box-shadow: rgba(23, 92, 230, 0.1) 0px 4px 24px;\n  margin-top: 28px;\n  gap: 12px;\n`;\nconst ContactTitle = styled.div`\n  font-size: 28px;\n  text-align: center;\n  margin-bottom: 10px;\n  font-weight: 600;\n  color: ${({ theme }) => theme.text_primary};\n`;\n\nconst ContactInput = styled.input`\n  flex: 1;\n  background-color: transparent;\n  border: 1px solid ${({ theme, $hasError }) => ($hasError ? 'red' : theme.text_secondary + 50)};\n  outline: none;\n  font-size: 18px;\n  color: ${({ theme }) => theme.text_primary};\n  border-radius: 12px;\n  padding: 12px 16px;\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.primary};\n  }\n`;\n\nconst ContactInputMessage = styled.textarea`\n  flex: 1;\n  background-color: transparent;\n  border: 1px solid ${({ theme, $hasError }) => ($hasError ? 'red' : theme.text_secondary + 50)};\n  outline: none;\n  font-size: 18px;\n  color: ${({ theme }) => theme.text_primary};\n  border-radius: 12px;\n  padding: 12px 16px;\n  &:focus {\n    border: 1px solid ${({ theme }) => theme.primary};\n  }\n`;\n\nconst ContactButton = styled.button`\n  width: 100%;\n  text-decoration: none;\n  background: hsla(271, 100%, 50%, 1);\n  background: linear-gradient(\n    225deg,\n    hsla(271, 100%, 50%, 1) 0%,\n    hsla(294, 100%, 50%, 1) 100%\n  );\n  background: -moz-linear-gradient(\n    225deg,\n    hsla(271, 100%, 50%, 1) 0%,\n    hsla(294, 100%, 50%, 1) 100%\n  );\n  background: -webkit-linear-gradient(\n    225deg,\n    hsla(271, 100%, 50%, 1) 0%,\n    hsla(294, 100%, 50%, 1) 100%\n  );\n  padding: 13px 16px;\n  margin-top: 2px;\n  border-radius: 12px;\n  border: none;\n  color: ${({ theme }) => theme.text_primary};\n  font-size: 18px;\n  font-weight: 600;\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  opacity: ${({ disabled }) => (disabled ? 0.7 : 1)};\n  display: flex; /* Key for centering content */\n  justify-content: center; /* Centers horizontally */\n  align-items: center; /* Centers vertically */\n  gap: 8px; /* Space between spinner and text (if both are present) */\n`;\nconst SocialMediaIcons = styled.div`\n  display: flex;\n@media(max-width: 400px){\n  width: 100%;\n  justify-content: space-evenly;\n  padding: 0 10px;\n}\n`;\nconst SocialMediaIcon = styled.a`\n  display: inline-block;\n  font-size: 1.5rem;\n  margin: 10px 1rem 0;\n  color: ${({ theme }) => theme.text_primary};\n  transition: color 0.2s ease-in-out;\n  &:hover {\n    color: ${({ theme }) => theme.primary};\n  }\n  @media(max-width: 400px){\n  margin: 0;\n  }\n`;\n\nconst LoadingSpinner = styled.div`\n  border: 4px solid rgba(255, 255, 255, 0.3);\n  border-top: 4px solid ${({ theme }) => theme.text_primary};\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  animation: spin 1s linear infinite;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst FormMessage = styled.p`\n  text-align: center;\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 12px;\n  color: ${({ type }) => (type === 'error' ? 'red' : 'green')};\n`;\n\n\nconst Contact = () => {\n  const form = useRef();\n  const [isSending, setIsSending] = useState(false);\n  const [formMessage, setFormMessage] = useState('');\n  const [formMessageType, setFormMessageType] = useState('');\n\n  const [validationErrors, setValidationErrors] = useState({\n    from_email: false,\n    from_name: false,\n    message: false,\n  });\n\n  const clearValidationError = (fieldName) => {\n    if (validationErrors[fieldName]) {\n      setValidationErrors((prevErrors) => ({\n        ...prevErrors,\n        [fieldName]: false,\n      }));\n      if (formMessageType === 'error' && formMessage.includes('required fields')) {\n          setFormMessage('');\n          setFormMessageType('');\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    setFormMessage('');\n    setFormMessageType('');\n\n    let hasError = false;\n    const errors = {\n      from_email: false,\n      from_name: false,\n      message: false,\n    };\n\n    const emailInput = form.current.elements.from_email;\n    const nameInput = form.current.elements.from_name;\n    const messageInput = form.current.elements.message;\n\n    if (!nameInput.value.trim()) {\n      errors.from_name = true;\n      hasError = true;\n    }\n    if (!emailInput.value.trim()) {\n      errors.from_email = true;\n      hasError = true;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(emailInput.value)) {\n      errors.from_email = true;\n      hasError = true;\n    }\n    if (!messageInput.value.trim()) {\n      errors.message = true;\n      hasError = true;\n    }\n\n    setValidationErrors(errors);\n\n    if (hasError) {\n      setFormMessage('Please fill in all required fields and ensure email is valid.');\n      setFormMessageType('error');\n      return;\n    }\n\n    setIsSending(true);\n\n    try {\n      const result = await emailjs.sendForm(\n        \"service_j8n2w7r\",\n        \"template_k34okyh\",\n        form.current,\n        \"CPqsd_WoFyuxo09lw\"\n      );\n\n      console.log('EmailJS Result:', result.text);\n      setFormMessage('Message Sent Successfully!');\n      setFormMessageType('success');\n      form.current.reset();\n      setValidationErrors({\n        from_email: false,\n        from_name: false,\n        message: false,\n      });\n\n    } catch (error) {\n      console.error('EmailJS Error:', error);\n      setFormMessage(`Failed to send message: ${error.text || 'An unexpected error occurred.'}`);\n      setFormMessageType('error');\n    } finally {\n      setIsSending(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Suspense fallback={<div>Loading 3D...</div>}>\n          <EarthCanvas />\n        </Suspense>\n        <Title>Contact</Title>\n        <Desc>\n          Feel free to reach out to me for any questions or opportunities!\n        </Desc>\n        <SocialMediaIcons>\n        <SocialMediaIcon href={`https://mail.google.com/mail/?view=cm&fs=1&to=${Bio.gmail}&su=Subject%20Here&body=Your%20message%20here`} target=\"_blank\" aria-label=\"Gmail\">\n          <GmailIcon />\n        </SocialMediaIcon>\n        <SocialMediaIcon href={Bio.facebook} target=\"_blank\" aria-label=\"Facebook\">\n          <FacebookIcon />\n        </SocialMediaIcon>\n        <SocialMediaIcon href={Bio.twitter} target=\"_blank\" aria-label=\"Twitter\">\n          <TwitterIcon />\n        </SocialMediaIcon>\n        <SocialMediaIcon href={Bio.linkedin} target=\"_blank\" aria-label=\"LinkedIn\">\n          <LinkedInIcon />\n        </SocialMediaIcon>\n        <SocialMediaIcon href={Bio.insta} target=\"_blank\" aria-label=\"Instagram\">\n          <InstagramIcon />\n        </SocialMediaIcon>\n        <SocialMediaIcon href={Bio.telegram} target=\"_blank\" aria-label=\"Telegram\">\n          <TelegramIcon />\n        </SocialMediaIcon>\n        </SocialMediaIcons>\n        <ContactForm onSubmit={handleSubmit} ref={form}>\n          <ContactTitle>Email Me 🚀</ContactTitle>\n\n          {formMessage && (\n            <FormMessage type={formMessageType}>{formMessage}</FormMessage>\n          )}\n\n          <ContactInput\n            placeholder=\"Your Email\"\n            name=\"from_email\"\n            type=\"email\"\n            $hasError={validationErrors.from_email}\n            onFocus={() => clearValidationError('from_email')} \n            onChange={() => clearValidationError('from_email')}\n          />\n          <ContactInput\n            placeholder=\"Your Name\"\n            name=\"from_name\"\n            $hasError={validationErrors.from_name}\n            onFocus={() => clearValidationError('from_name')} \n            onChange={() => clearValidationError('from_name')}\n          />\n          <ContactInput\n            placeholder=\"Subject\"\n            name=\"subject\"\n          />\n          <ContactInputMessage\n            placeholder=\"Message\"\n            name=\"message\"\n            rows={4}\n            $hasError={validationErrors.message}\n            onFocus={() => clearValidationError('message')}\n            onChange={() => clearValidationError('message')}\n          />\n          \n          <ContactButton \n            type=\"submit\" \n            disabled={isSending}\n          >\n            {isSending ? <LoadingSpinner /> : \"Send\"}\n          </ContactButton>\n        </ContactForm>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Contact;"],"names":["Earth","earth","useGLTF","_jsx","object","scene","scale","EarthCanvas","Canvas","shadows","frameloop","dpr","gl","preserveDrawingBuffer","camera","fov","near","far","position","children","_jsxs","Suspense","fallback","OrbitControls","autoRotate","enableZoom","maxPolarAngle","Math","PI","minPolarAngle","Preload","all","Container","styled","div","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","Title","_templateObject3","_ref","theme","text_primary","Desc","_templateObject4","_ref2","text_secondary","ContactForm","form","_templateObject5","ContactTitle","_templateObject6","_ref3","ContactInput","input","_templateObject7","_ref4","$hasError","_ref5","_ref6","primary","ContactInputMessage","textarea","_templateObject8","_ref7","_ref8","_ref9","ContactButton","button","_templateObject9","_ref10","_ref11","disabled","_ref12","SocialMediaIcons","_templateObject10","SocialMediaIcon","a","_templateObject11","_ref13","_ref14","LoadingSpinner","_templateObject12","_ref15","FormMessage","p","_templateObject13","_ref16","type","Contact","useRef","isSending","setIsSending","useState","formMessage","setFormMessage","formMessageType","setFormMessageType","validationErrors","setValidationErrors","from_email","from_name","message","clearValidationError","fieldName","prevErrors","_objectSpread","includes","href","concat","Bio","gmail","target","GmailIcon","facebook","FacebookIcon","twitter","TwitterIcon","linkedin","LinkedInIcon","insta","InstagramIcon","telegram","TelegramIcon","onSubmit","async","e","preventDefault","hasError","errors","emailInput","current","elements","nameInput","messageInput","value","trim","test","result","emailjs","console","log","text","reset","error","ref","placeholder","name","onFocus","onChange","rows"],"sourceRoot":""}